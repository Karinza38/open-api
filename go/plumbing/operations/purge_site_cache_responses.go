// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PurgeSiteCacheReader is a Reader for the PurgeSiteCache structure.
type PurgeSiteCacheReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PurgeSiteCacheReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPurgeSiteCacheAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPurgeSiteCacheBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPurgeSiteCacheNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPurgeSiteCacheAccepted creates a PurgeSiteCacheAccepted with default headers values
func NewPurgeSiteCacheAccepted() *PurgeSiteCacheAccepted {
	return &PurgeSiteCacheAccepted{}
}

/*
PurgeSiteCacheAccepted handles this case with default header values.

OK
*/
type PurgeSiteCacheAccepted struct {
}

func (o *PurgeSiteCacheAccepted) Error() string {
	return fmt.Sprintf("[POST /purge][%d] purgeSiteCacheAccepted ", 202)
}

func (o *PurgeSiteCacheAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPurgeSiteCacheBadRequest creates a PurgeSiteCacheBadRequest with default headers values
func NewPurgeSiteCacheBadRequest() *PurgeSiteCacheBadRequest {
	return &PurgeSiteCacheBadRequest{}
}

/*
PurgeSiteCacheBadRequest handles this case with default header values.

Invalid request parameters
*/
type PurgeSiteCacheBadRequest struct {
}

func (o *PurgeSiteCacheBadRequest) Error() string {
	return fmt.Sprintf("[POST /purge][%d] purgeSiteCacheBadRequest ", 400)
}

func (o *PurgeSiteCacheBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPurgeSiteCacheNotFound creates a PurgeSiteCacheNotFound with default headers values
func NewPurgeSiteCacheNotFound() *PurgeSiteCacheNotFound {
	return &PurgeSiteCacheNotFound{}
}

/*
PurgeSiteCacheNotFound handles this case with default header values.

Site not found
*/
type PurgeSiteCacheNotFound struct {
}

func (o *PurgeSiteCacheNotFound) Error() string {
	return fmt.Sprintf("[POST /purge][%d] purgeSiteCacheNotFound ", 404)
}

func (o *PurgeSiteCacheNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
